name: Create workload zone

on:
  issues:
    types: [ opened ]
  workflow_dispatch:

permissions:
  issues: write
  contents: write
  actions: write

jobs:
  opened:
    name: Create workload zone
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/devanshjainms/sap-automation:devanshjain-githubworkflow
    if: contains(github.event.issue.labels.*.name, 'create-wrokload-zone')
    steps:
      - name: Get app token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v3
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}
          #organization: ${{ github.repository_owner }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.get_workflow_token.outputs.token }}

      - name: Run Issue form parser
        id: parse
        uses: peter-murray/issue-forms-body-parser@v4
        with:
          issue_id: ${{ github.event.issue.number }}
          separator: '###'
          label_marker_start: '​' # U+200B - Zero Width Space; to make sure the UI stays clean
          label_marker_end: '​' # U+200B

      - name: Create GitHub Environment for workload zone
        env:
          GH_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        run: |
          json_input='${{ steps.parse.outputs.payload }}'

          workload_environment=$(echo ${json_input} | jq -r '."Environment"')
          region=$(echo ${json_input} | jq -r '."Region"')
          deployer_name=$(echo ${json_input} | jq -r '."Deployer Name"')
          workload_vnet=$(echo ${json_input} | jq -r '."Workload Vnet"')

          pushd /source/deploy/terraform/terraform-units/modules/sap_namegenerator
          region_map=$(echo var.region_mapping.${region} | terraform console | tr -d '"')
          popd

          echo region_map: $region_map
          echo region: $region

          workload_environment_config=${workload_environment}-${region_map}-${workload_vnet}-INFRASTRUCTURE

          url_to_call=/repos/${{ github.repository }}/environments/${workload_environment_config^^}

          _=$(gh api \
            -X PUT \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            ${url_to_call})

          mkdir -p WORKSPACES/WROKLOAD/${workload_environment_config^^}

          cat .cfg_template/deployer.tfvars \
            | sed "s|@@ENV@@|${workload_environment}|g" \
            | sed "s|@@REGION@@|${region}|g" \
            | sed "s|@@VNET@@|${workload_vnet}|g" \
            | sed "s|@@REGION_DISPLAY_NAME@@|${region}|g" \
            > WORKSPACES/LANDSCAPE/${workload_environment_config^^}/${workload_environment_config^^}.tfvars

          # Update the environment in the issue-closed workflow
          workspace=$(ls ${GITHUB_WORKSPACE}/WORKSPACES|tail -n 1)
          yq -i '.jobs.link-azure.environment = "'${workload_environment^^}'"' .github/workflows/issue-closed.yaml

          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          git config --global user.name "GitHub Actions"
          git config --global user.email "sap-automation-deployer@noreply.github.com"

          git add WORKSPACES
          git add .github/workflows/issue-closed.yaml

          git commit -m "Add configuration for ${workload_environment} in ${region}"
          git push

          # Now update the deployment workflow with the deployer and library
          .github/workflows/scripts/update-workflow-on-workspaces-changes.sh

      - name: Close issue
        run: |
          new_issue=$(cat .github/workflows/templates/link-azure.tpl | sed "s|@@REPO@@|${{ github.server_url }}/${{ github.repository }}|g" | \
          gh issue create -t "Link Azure to GitHub" -F - -l link-azure)

          gh issue close ${{ github.event.issue.number }}
          gh issue comment ${{ github.event.issue.number }} --body "Environment created. The only thing left is add the information required to connect to Azure. I created a [new issue for you to fill in the required information](${new_issue})."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
